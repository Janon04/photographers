# Generated by Django 5.2.6 on 2025-11-01 08:53

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bookings', '0005_alter_booking_service_type'),
        ('reviews', '0004_review_analysis_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ReviewCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Review Categories',
            },
        ),
        migrations.CreateModel(
            name='ReviewHelpfulness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_helpful', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=True)),
            ],
        ),
        migrations.AlterModelOptions(
            name='review',
            options={'ordering': ['-created_at']},
        ),
        migrations.AddField(
            model_name='review',
            name='ai_sentiment',
            field=models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative'), ('neutral', 'Neutral'), ('mixed', 'Mixed')], default='neutral', help_text='AI-determined sentiment', max_length=20),
        ),
        migrations.AddField(
            model_name='review',
            name='communication_rating',
            field=models.PositiveSmallIntegerField(default=5, help_text='Communication rating', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='review',
            name='helpfulness_votes',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='review',
            name='is_featured',
            field=models.BooleanField(default=False, help_text='Featured review for homepage'),
        ),
        migrations.AddField(
            model_name='review',
            name='is_verified',
            field=models.BooleanField(default=True, help_text='Verified booking review'),
        ),
        migrations.AddField(
            model_name='review',
            name='key_phrases',
            field=models.JSONField(blank=True, default=list, help_text='Extracted key phrases'),
        ),
        migrations.AddField(
            model_name='review',
            name='overall_rating',
            field=models.PositiveSmallIntegerField(default=5, help_text='Overall rating from 1-5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='review',
            name='professionalism_rating',
            field=models.PositiveSmallIntegerField(default=5, help_text='Professionalism rating', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='review',
            name='quality_rating',
            field=models.PositiveSmallIntegerField(default=5, help_text='Photo quality rating', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='review',
            name='rating_consistency',
            field=models.BooleanField(default=True, help_text='Rating matches sentiment'),
        ),
        migrations.AddField(
            model_name='review',
            name='reading_time_seconds',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='review',
            name='sentiment_analysis',
            field=models.JSONField(blank=True, default=dict, help_text='Detailed AI analysis'),
        ),
        migrations.AddField(
            model_name='review',
            name='sentiment_confidence',
            field=models.FloatField(default=0.0, help_text='Confidence score 0-1'),
        ),
        migrations.AddField(
            model_name='review',
            name='title',
            field=models.CharField(default='Great Service', help_text='Review title/summary', max_length=200),
        ),
        migrations.AddField(
            model_name='review',
            name='total_votes',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='review',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='review',
            name='value_rating',
            field=models.PositiveSmallIntegerField(default=5, help_text='Value for money rating', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)]),
        ),
        migrations.AddField(
            model_name='review',
            name='word_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='review',
            name='comment',
            field=models.TextField(help_text='Detailed review comment'),
        ),
        migrations.AlterField(
            model_name='review',
            name='rating',
            field=models.PositiveSmallIntegerField(default=5),
        ),
        migrations.CreateModel(
            name='ReviewAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('average_overall_rating', models.FloatField(default=0.0)),
                ('average_quality_rating', models.FloatField(default=0.0)),
                ('average_professionalism_rating', models.FloatField(default=0.0)),
                ('average_communication_rating', models.FloatField(default=0.0)),
                ('average_value_rating', models.FloatField(default=0.0)),
                ('positive_sentiment_count', models.PositiveIntegerField(default=0)),
                ('negative_sentiment_count', models.PositiveIntegerField(default=0)),
                ('neutral_sentiment_count', models.PositiveIntegerField(default=0)),
                ('total_helpfulness_votes', models.PositiveIntegerField(default=0)),
                ('response_rate', models.FloatField(default=0.0)),
                ('rating_trend', models.CharField(default='stable', max_length=20)),
                ('sentiment_trend', models.CharField(default='stable', max_length=20)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('photographer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review_analytics', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='review',
            name='categories',
            field=models.ManyToManyField(blank=True, help_text='Review categories', to='reviews.reviewcategory'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['photographer', '-created_at'], name='reviews_rev_photogr_081185_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['overall_rating'], name='reviews_rev_overall_96630a_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['ai_sentiment'], name='reviews_rev_ai_sent_74e5b2_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['is_approved', '-created_at'], name='reviews_rev_is_appr_dbec64_idx'),
        ),
        migrations.AddField(
            model_name='reviewhelpfulness',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='helpfulness_votes_detail', to='reviews.review'),
        ),
        migrations.AddField(
            model_name='reviewhelpfulness',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reviewresponse',
            name='review',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='photographer_response', to='reviews.review'),
        ),
        migrations.AlterUniqueTogether(
            name='reviewhelpfulness',
            unique_together={('review', 'user')},
        ),
    ]
